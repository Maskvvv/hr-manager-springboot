<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhy.hr.userinfo.mapper.JobLevelMapper">
    <resultMap type="com.zhy.hr.userinfo.domain.JobLevel" id="JobLevelResult">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="titleLevel" column="title_level"/>
        <result property="createDate" column="create_date"/>
        <result property="enabled" column="enabled"/>
        <result property="userCount" column="user_count"/>
    </resultMap>

    <sql id="selectJobLevelVo">
        select jl.id, jl.name, jl.title_level, jl.create_date, jl.enabled, (select count(*) from user_info ui where ui.job_level_id = jl.id) AS user_count
        from job_level jl
    </sql>

    <select id="selectJobLevelList" resultMap="JobLevelResult">
        <include refid="selectJobLevelVo"/>
        <where>
            <if test="id != null "> and jl.id = #{id}</if>
            <if test="name != null  and name != ''"> and jl.name like concat('%', #{name}, '%')</if>
            <if test="titleLevel != null  and titleLevel != ''"> and jl.title_level = #{titleLevel}</if>
            <if test="createDate != null "> and jl.create_date = #{createDate}</if>
        </where>
    </select>

    <select id="selectJobLevelById" parameterType="Long" resultMap="JobLevelResult">
        <include refid="selectJobLevelVo"/>
        where jl.id = #{id}
    </select>

    <insert id="insertJobLevel" useGeneratedKeys="true" keyProperty="id">
        insert into job_level
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">name,</if>
            <if test="titleLevel != null">title_level,</if>
            <if test="createDate != null">create_date,</if>
            <if test="enabled != null">enabled,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="titleLevel != null">#{titleLevel},</if>
            <if test="createDate != null">#{createDate},</if>
            <if test="enabled != null">#{enabled},</if>
         </trim>
    </insert>

    <update id="updateJobLevel">
        update job_level
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="titleLevel != null">title_level = #{titleLevel},</if>
            <if test="createDate != null">create_date = #{createDate},</if>
            <if test="enabled != null">enabled = #{enabled},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteJobLevelById" parameterType="Long">
        delete from job_level where id = #{id}
    </delete>

    <delete id="deleteJobLevelByIds" parameterType="String">
        delete from job_level where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
